// SPDX-License-Identifier: GPL-2.0-only
/*
 * debug device tree source code for gs101 SoC
 *
 * Copyright (C) 2020 Samsung Electronics Co., Ltd.
 *              http://www.samsung.com
 */

#include <dt-bindings/interrupt-controller/gs101.h>
#include "gs101-dpm.dtsi"
/ {
	dss: dss {
		compatible = "google,debug-snapshot";
		freq_names = "LIT", "MID", "BIG", "INT", "MIF", "ISP",
				"DISP", "INTCAM", "TPU", "TNR", "MFC",
				"BO";
		memory-region = <&header>, <&log_kevents>, <&log_s2d>,
				<&log_arrdumpreset>, <&log_arrdumppanic>;
	};

	hardlockup-debugger {
		compatible = "google,hardlockup-debug";
		use_multistage_wdt_irq = <798>;
	};

	hardlockup-watchdog {
		compatible = "google,hardlockup-watchdog";
		sampling_time = <4>;
		opportunity_count = <3>;
		panic = <1>;
	};

	dss-built {
		compatible = "google,debug-snapshot-built";
		memory-region = <&header>;
	};

	dss-qdump {
		compatible = "google,debug-snapshot-qdump";
	};

	dss-sfrdump {
		compatible = "google,debug-snapshot-sfrdump";
		/*
		 * -----------<< Example >>-------------------
		 * dump-info {
		 *	#address-cells = <1>;
		 *	#size-cells = <1>;
		 *
		 *	gic-setenable {
		 *		reg = <0x11f01100 0x100>;
		 *	};
		 *	gic-setpend {
		 *		reg = <0x11f01200 0x100>;
		 *	};
		 *	gic-setactive {
		 *		reg = <0x11f01300 0x100>;
		 *	};
		 *};
		 */
	};

	exynos-debug-test {
		compatible = "google,exynos-debug-test";
		ps_hold_control_offset = <0x3e9c>;
		nr_cpu = <0x8>;
		nr_little_cpu = <0x4>;
		nr_mid_cpu = <0x2>;
		nr_big_cpu = <0x2>;
		little_cpu_start = <0x0>;
		mid_cpu_start = <0x4>;
		big_cpu_start = <0x6>;
	};

	keydebug {
		compatible = "keydebug";
		key_down_delay = <6000>;
		keys_down = <116>;
		dbg_fn_delay = <2000>;
	};

	gs101-itmon {
		compatible = "google,gs101-itmon";
		interrupts =
			<GIC_SPI IRQ_TREX_D_BUS0_debugInterrupt_BUS0
							IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI IRQ_TREX_D0_BUS1_debugInterrupt_BUS1
							IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI IRQ_TREX_D_BUS2_debugInterrupt_BUS2
							IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI IRQ_TREX_D_CORE_debugInterrupt_CORE
							IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI IRQ_TREX_P_CORE_debugInterrupt_CORE
							IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI IRQ_TREX_P_BUS0_debugInterrupt_BUS0
							IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI IRQ_TREX_P_BUS1_debugInterrupt_BUS1
							IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI IRQ_TREX_P_BUS2_debugInterrupt_BUS2
							IRQ_TYPE_LEVEL_HIGH>;
		panic_count = <5>;
		err_fatal = <GO_S2D_ID>;
		err_drex_tmout = <GO_S2D_ID>;
		err_ip = <GO_PANIC_ID>;
		err_cpu = <GO_DEFAULT_ID>;
		err_unhandled = <GO_PANIC_ID>;
	};
};

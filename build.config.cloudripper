DEFCONFIG=cloudripper_gki_defconfig
GKI_FRAGMENT_DEFCONFIG=${KERNEL_DIR}/arch/arm64/configs/cloudripper_gki.fragment
VENDOR_RAMDISK_BINARY=${VENDOR_RAMDISK_BINARY:-${ROOT_DIR}/prebuilts/boot-artifacts/ramdisks/vendor_ramdisk-cloudripper.img}

. ${ROOT_DIR}/${KERNEL_DIR}/build.config.gs101

MAKE_GOALS="$MAKE_GOALS
modules
google/gs201-a0.dtb
google/gs201-b0.dtb
google/dtbo.img
google/gs201-dpm-eng.dtbo
google/gs201-dpm-user.dtbo
google/gs201-dpm-userdebug.dtbo
"

FILES="
arch/arm64/boot/dts/google/gs201-a0.dtb
arch/arm64/boot/dts/google/gs201-b0.dtb
arch/arm64/boot/dts/google/dtbo.img
arch/arm64/boot/dts/google/gs201-dpm-eng.dtbo
arch/arm64/boot/dts/google/gs201-dpm-user.dtbo
arch/arm64/boot/dts/google/gs201-dpm-userdebug.dtbo
"

if [ -z "$MIXED_BUILD" ]; then
FILES="$FILES
$DEVICE_KERNEL_FILES
"
fi

MODULES_LIST=${KERNEL_DIR}/vendor_boot_modules.cloudripper
VENDOR_DLKM_MODULES_BLOCKLIST=${KERNEL_DIR}/vendor_dlkm.blocklist.cloudripper

VENDOR_RAMDISK_CMDS="modify_vendor_ramdisk"
function modify_vendor_ramdisk() {
  ln -f init.recovery.gs201.rc init.recovery.cloudripper.rc
  ln -f init.recovery.gs201.rc init.recovery.ravenclaw.rc
  ln -f init.recovery.gs201.rc init.recovery.cheetah.rc
  ln -f init.recovery.gs201.rc init.recovery.panther.rc
}

EXT_MODULES_MAKEFILE=${KERNEL_DIR}/Makefile.ext_modules.cloudripper
# Explicitly clear EXT_MODULES because build.config.gs101 might set it to
# "private/google-modules/uwb/kernel" which we don't want because uwb/kernel is
# already built by Makefile.ext_modules.cloudripper
EXT_MODULES=""
